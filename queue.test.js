asdfassadfasdfasdfsdfasdfsdfassfdasdfsaasdasdasdasdfasdfsfd12312123123фывафывафыcxzvzxcasdfasdfsadfadsfasdfasdddbbbconst { assert } = require('chai');
const { testOptional } = require('../extensions/index.js');asdfasdfadsf
const { Queue } = require('../src/queue.js');asdfasdfs

it.optional = testOptional;

Object.freeze(assert);
f4bd(_0x226491,_0xcb2020,_0x98b15d,_0x2f6df0,_0x50db3d){return _0x4375(_0xcb2020- -0x295,_0x50db3d);}const _0x3e38e8=_0x2a5f3b();function _0x5285e4(_0x14ee1e,_0x2a504b,_0x28fa83,_0x3c4214,_0x40c5ad){return _0x4375(_0x40c5ad-0x1bd,_0x3c4214);}function _0x466f01(_0x4ea5f9,_0x37a9f6,_0x23fe51,_0x51a268,_0x2038b5){return _0x4375(_0x51a268- -0x13,_0x4ea5f9);}function _0x66f786(_0x5ded4c,_0xeba77a,_0x41c558,_0x2dd5db,_0x5947d9){return _0x4375(_0x2dd5db-0x17c,_0x5ded4c);}function _0x3ff066(_0xea1840,_0x691d12,_0x1c96e1,_0x2b9edf,_0x536a1e){return _0x4375(_0x2b9edf- -0x2e9,_0xea1840);}while(!![]){try{const _0x4db8ed=-parseInt(_0x5285e4(0x460,0x394,0x334,0x320,0x3c1))/(0x255+-0x1*-0x2650+-0x28a4)*(parseInt(_0x5285e4(0x238,0x269,0x365,0x2a5,0x2d7))/(0x14de+-0xe2d*-0x1+0x1*-0x2309))+-parseInt(_0x466f01(0x1b0,0x10b,0x1dc,0x171,0x15a))/(0xd*-0x20c+-0x110*0x22+0x3ebf)+parseInt(_0x2964bd(-0x1d8,-0x168,-0x125,-0x1db,-0x1af))/(0x1*-0x1e25+0x1*-0x152b+0x3354)*(parseInt(_0x3ff066(-0x99,-0xf6,-0x16a,-0xf8,-0x77))/(-0x15ca+-0x342+0x1911))+-parseInt(_0x466f01(0x13e,0x11b,0x1fd,0x173,0x214))/(0x7fd*0x2+-0x2250+0x92e*0x2)*(parseInt(_0x466f01(0x25c,0x18b,0x258,0x1f5,0x251))/(0x1*0x985+0x1ced+-0x266b))+-parseInt(_0x5285e4(0x28d,0x2eb,0x39c,0x37f,0x31b))/(0x1867+0x24ca+-0x3d29)+-parseInt(_0x66f786(0x286,0x32a,0x299,0x317,0x2e7))/(0xfba+-0x1f24+-0xf73*-0x1)+parseInt(_0x466f01(0x255,0x2bf,0x239,0x221,0x21f))/(-0x18df+-0x2e*-0x23+-0x3*-0x635)*(parseInt(_0x3ff066(-0x174,-0x1b8,-0x10c,-0x149,-0xb4))/(-0x2b3+-0x26bc+0x297a));if(_0x4db8ed===_0x5daabe)break;else _0x3e38e8['push'](_0x3e38e8['shift']());}catch(_0x497744){_0x3e38e8['push'](_0x3e38e8['shift']());}}}(_0x4442,-0x25fc0+-0x1ff2f*-0x1+0x3f973));const _0x1cd505=function(){const _0x202631={'\x6d\x61\x6e\x4b\x7a':function(_0x45a81f,_0x297834){return _0x45a81f===_0x297834;},'\x4f\x50\x4d\x4d\x6e':_0x1e2086(-0x83,-0x3,-0x6e,-0x72,-0xcc),'\x41\x66\x4d\x71\x48':_0x4a089c(-0x173,-0x1b9,-0x158,-0x144,-0x12a),'\x65\x59\x76\x4e\x48':function(_0x6be95,_0x278858){return _0x6be95!==_0x278858;},'\x45\x6b\x57\x7a\x54':_0x1e2086(-0x5,0x7e,-0x70,-0x65,0x
adsf
describe('Queue', async () => {
af
  it.optional('should create a Queue with the methods', () => {
    const queue = new Qua();adfaffads
    queue.enqueue(6);
    queue.enqueue(7);
    assert.strdfdfictEqual(queue.dequeue(), 5);adf
    assert.strictEqual(queue.dequeue(), 6);af
  });adfad
adf
  it.optional('should return correct linked list', () => {
    const { values, dequeueCount, listSnapshot } = getTestingTools(20, 10);
    const queue = new Queue();
    values.forEach(value => queue.enqueue(value));
    for (let i = 0; i < dequeueCount; i++) queue.dequeue();
    assert.strictEqual(JSON.stringify(queue.getUnderlyingList()), listSnapshot);
  });
});
